# synthax=docker/dockerfile:1

FROM node:16.14.2 AS build-stage
WORKDIR /react_app
COPY ["package.json", "package-lock.json*", "/react_app/"]
RUN npm install
COPY ./ /react_app/
RUN npm run build

# FROM certbot/dns-digitalocean:latest

FROM nginx:latest
RUN apt update
RUN apt install python3
RUN apt install python3-pip
COPY ./.nginx/nginx.conf /etc/nginx/nginx.conf
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build-stage /react_app/build /usr/share/nginx/html
COPY ./production.env.sh /usr/share/nginx/html
COPY production.env /usr/share/nginx/html
RUN chmod +x /usr/share/nginx/html/production.env.sh
CMD ["/bin/sh", "-c", "/usr/share/nginx/html/production.env.sh && nginx -g \"daemon off;\""]




# # Use an Nginx base image
# FROM nginx:1.19-alpine

# # Copy the built React app from the previous step
# COPY --from=0 /app/build /usr/share/nginx/html


# RUN apk add certbot && \
#     apk add certbot-nginx

# # Get the certificate from Let's Encrypt and configure Nginx to use HTTPS
# RUN certbot --nginx && \
#     echo "server { listen 80; server_name localhost; return 301 https://votethenews.com; }" > /etc/nginx/conf.d/redirect.conf

# # Start Nginx
# CMD ["nginx", "-g", "daemon off;"]


# RUN apk add python3 python3-dev py3-pip build-base libressl-dev musl-dev libffi-dev rust cargo
# RUN pip3 install pip --upgrade
# RUN pip3 install certbot-nginx
# RUN mkdir /etc/letsencrypt